<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- Realm -->
	<bean id="remoteRealm" class="com.xqs.client.realm.ClientRealm">
		<property name="cachingEnabled" value="true" />
		<property name="appId" value="{client.app.id}" />
		<property name="remoteService" ref="remoteService" />
	</bean>

	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="${client.session.id}" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
		<property name="domain" value="${client.cookie.domain}" />
		<property name="path" value="/" />
	</bean>

	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="${client.rememberMe.id}" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" /><!-- 单位秒，30天 -->
		<property name="domain" value="${client.cookie.domain}" />
		<property name="path" value="/" />
	</bean>

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie"></property>
	</bean>

	<!-- sessionDAO -->
	<bean id="sessionDAO" class="com.xqs.client.dao.ClientSessionDao">
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
		<property name="appId" value="${client.app.id}" />
		<property name="remoteService" ref="remoteService" />
	</bean>

	<!-- session管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="deleteInvalidSessions" value="false" />
		<property name="sessionValidationSchedulerEnabled" value="false" />
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
	</bean>

	<!-- security管理器 依赖realm,sessionManager,rememberMeManager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="remoteRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>

	<!-- 为spring设置security管理器 -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager"></property>
	</bean>

	<bean id="clientAuthenticationFilter" class="com.xqs.client.filter.ClientAuthenticationFilter" />

	<!-- shiro的web过滤器 -->
	<bean id="shiroFilter" class="com.xqs.client.filter.ClientShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<property name="loginUrl" value="${client.login.url}"></property>
		<property name="successUrl" value="${client.success.url}"></property>
		<property name="unauthorizedUrl" value="${client.unauthorized.url}"></property>
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="clientAuthenticationFilter"></entry>
			</util:map>
		</property>
		<property name="filtersStr" value="${client.filters}" />
		<property name="filterChainDefinitionStr" value="${client.filter.chain.definitions}" />
	</bean>

	<!-- shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>