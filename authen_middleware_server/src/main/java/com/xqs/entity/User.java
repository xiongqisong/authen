package com.xqs.entity;
// Generated 2017-11-3 17:03:53 by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.apache.shiro.crypto.hash.Md5Hash;
import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;
import org.springframework.util.StringUtils;

import lombok.AllArgsConstructor;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

/**
 * SysUser generated by hbm2java
 */
@Table(name = "user")
@DynamicInsert
@DynamicUpdate
@Entity
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@EqualsAndHashCode(callSuper = true)
@ToString
public class User extends IdEntity<User> implements java.io.Serializable {
	@Column(name = "organization_id")
	private Long organizationId;

	@JoinColumn(name = "app_id")
	@ManyToOne(targetEntity = com.xqs.entity.App.class, fetch = FetchType.EAGER)
	private App app;

	private String username;

	private String password;

	private String salt;

	@Column(name = "role_ids")
	private String roleIds;

	private Boolean locked;

	@Column(name = "create_time")
	private Date createTime;

	@Column(name = "update_time")
	private Date updateTime;

	public User(Long organizationId, App app, String username, String password, String roleIds, Boolean locked) {
		this.organizationId = organizationId;
		this.app = app;
		this.username = username;
		this.password = password;
		this.roleIds = roleIds;
		this.locked = locked;
	}

	/**
	 * 获取用户拥有的所有角色的id集合
	 * 
	 * @return
	 */
	public List<Long> getRoles() {
		List<Long> result = null;
		if (!StringUtils.isEmpty(this.roleIds)) {
			String[] array = this.roleIds.split(",");
			if (array.length > 0) {
				result = new ArrayList<Long>();
				for (String roleId : array) {
					result.add(Long.valueOf(roleId));
				}
			}
		}
		return result;
	}

	public String getCredentialsSalt() {
		return username + salt;
	}

	public static void main(String[] args) {
		System.out.println(new Md5Hash("123", "8d78869f470951332959580424d4bf4f").toString());
	}
}
